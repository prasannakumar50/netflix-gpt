{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\netflix-gpt\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Header from './Header';\nimport { checkValidData } from '../utils/validate';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { auth } from '../utils/firebase';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { addUser } from '../utils/userSlice';\nimport { LOGO } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  isSignUp\n}) => {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const navigate = useNavigate();\n  const nameRef = useRef(null);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const dispatch = useDispatch();\n  const handleButtonClick = () => {\n    const message = checkValidData(emailRef.current.value, passwordRef.current.value);\n    setErrorMessage(message);\n    if (message) return null;\n    if (isSignUp) {\n      createUserWithEmailAndPassword(auth, emailRef.current.value, passwordRef.current.value).then(userCredential => {\n        const user = userCredential.user;\n        updateProfile(user, {\n          displayName: nameRef.current.value\n        }).then(() => {\n          const {\n            uid,\n            email,\n            displayName\n          } = auth.currentUser;\n          dispatch(addUser({\n            uid: uid,\n            email: email,\n            displayName: displayName\n          }));\n        }).catch(error => {\n          setErrorMessage(error.message);\n        });\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      signInWithEmailAndPassword(auth, emailRef.current.value, passwordRef.current.value).then(userCredential => {\n        const user = userCredential.user;\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: LOGO,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      className: \"absolute rounded-lg sm:w-6/12 md:w-4/12 lg:w-3/12 2xl:w-2/12 w-7/12 p-8 px-12 bg-black bg-opacity-90\\r my-28 mx-auto right-0 left-0 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \" font-bold text-2xl py-4\",\n        children: [isSignUp ? \"Sign Up\" : \"Sign In\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), isSignUp && /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameRef,\n        type: \"text\",\n        placeholder: \"Full Name\",\n        className: \"p-2 my-2 w-full bg-gray-800\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: emailRef,\n        type: \"text\",\n        placeholder: \"Email address\",\n        className: \"p-2 my-2 w-full bg-gray-800 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: passwordRef,\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"p-2 my-2 w-full  bg-gray-800\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-red-600 text-l\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p-2 my-2 bg-red-600 w-full rounded-lg\",\n        onClick: handleButtonClick,\n        children: [isSignUp ? \"Sign Up\" : \"Sign In\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-4 cursor-pointer\",\n        children: [isSignUp ? \"Already Registered? \" : \"New to Netflix? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: isSignUp ? \"/signin\" : \"/signup\",\n          className: \"text-white font-bold hover:underline\",\n          children: isSignUp ? \"Sign In Now\" : \"Sign Up Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"XhtKpfRhmuIOGM9ZRel3O5RjLwg=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useState","Header","checkValidData","createUserWithEmailAndPassword","signInWithEmailAndPassword","updateProfile","auth","Link","useNavigate","useDispatch","addUser","LOGO","jsxDEV","_jsxDEV","Login","isSignUp","_s","errorMessage","setErrorMessage","navigate","nameRef","emailRef","passwordRef","dispatch","handleButtonClick","message","current","value","then","userCredential","user","displayName","uid","email","currentUser","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onSubmit","e","preventDefault","ref","type","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/GitHub/netflix-gpt/src/components/Login.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport Header from './Header';\r\nimport { checkValidData } from '../utils/validate';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from \"firebase/auth\";\r\nimport { auth } from '../utils/firebase';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addUser } from '../utils/userSlice';\r\nimport { LOGO } from '../constants';\r\n\r\nconst Login = ({ isSignUp }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const navigate = useNavigate();\r\n  const nameRef = useRef(null);\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleButtonClick = () => {\r\n    const message = checkValidData(emailRef.current.value, passwordRef.current.value);\r\n    setErrorMessage(message);\r\n    if (message) return null;\r\n\r\n    if (isSignUp) {\r\n      createUserWithEmailAndPassword(auth, emailRef.current.value, passwordRef.current.value)\r\n        .then((userCredential) => {\r\n          const user = userCredential.user;\r\n          updateProfile(user, {\r\n            displayName: nameRef.current.value,\r\n          }).then(() => {\r\n            const { uid, email, displayName } = auth.currentUser;\r\n            dispatch(addUser({ uid: uid, email: email, displayName: displayName }));\r\n            \r\n          }).catch((error) => {\r\n            setErrorMessage(error.message);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(error.message);\r\n        });\r\n    } else {\r\n      signInWithEmailAndPassword(auth, emailRef.current.value, passwordRef.current.value)\r\n        .then((userCredential) => {\r\n          const user = userCredential.user;\r\n          \r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"absolute\">\r\n        <img src={LOGO}\r\n          alt=\"logo\" />\r\n      </div>\r\n      <form\r\n        onSubmit={(e) => e.preventDefault()}\r\n        className='absolute rounded-lg sm:w-6/12 md:w-4/12 lg:w-3/12 2xl:w-2/12 w-7/12 p-8 px-12 bg-black bg-opacity-90\r\n      my-28 mx-auto right-0 left-0 text-white'>\r\n\r\n        <h1 className=' font-bold text-2xl py-4'>{isSignUp ? \"Sign Up\" : \"Sign In\"} </h1>\r\n\r\n        {isSignUp && <input ref={nameRef} type=\"text\" placeholder=\"Full Name\" className=\"p-2 my-2 w-full bg-gray-800\" />}\r\n        <input ref={emailRef} type=\"text\" placeholder=\"Email address\" className=\"p-2 my-2 w-full bg-gray-800 \" />\r\n        <input ref={passwordRef} type=\"password\" placeholder=\"Password\" className=\"p-2 my-2 w-full  bg-gray-800\" />\r\n        <p className='font-bold text-red-600 text-l'>{errorMessage}</p>\r\n        <button className='p-2 my-2 bg-red-600 w-full rounded-lg' onClick={handleButtonClick}>{isSignUp ? \"Sign Up\" : \"Sign In\"} </button>\r\n\r\n        <div className='my-4 cursor-pointer'>\r\n          {isSignUp ? \"Already Registered? \" : \"New to Netflix? \"}\r\n          <Link to={isSignUp ? \"/signin\" : \"/signup\"} className=\"text-white font-bold hover:underline\">{isSignUp ? \"Sign In Now\" : \"Sign Up Now\"}</Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}