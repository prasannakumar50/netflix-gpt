{"ast":null,"code":"var _jsxFileName = \"E:\\\\netflix-gpt\\\\src\\\\components\\\\Body.js\";\nimport React from 'react';\nimport Login from './Login';\nimport Browse from './Browse';\nimport { createBrowserRouter } from 'react-router-dom';\nimport { RouterProvider } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  const appRouter = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Body, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"/browse\",\n    element: /*#__PURE__*/_jsxDEV(Browse, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 18\n    }, this)\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: appRouter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","Login","Browse","createBrowserRouter","RouterProvider","jsxDEV","_jsxDEV","Body","appRouter","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","router","_c","$RefreshReg$"],"sources":["E:/netflix-gpt/src/components/Body.js"],"sourcesContent":["import React from 'react'\r\nimport Login from './Login'\r\nimport Browse from './Browse'\r\nimport { createBrowserRouter } from 'react-router-dom'\r\nimport { RouterProvider } from 'react-router-dom'\r\n\r\nconst Body = () => {\r\n\r\n const appRouter = createBrowserRouter([\r\n    {\r\n        path: \"/\",\r\n        element: <Body/>\r\n    },\r\n    {\r\n        path: \"/browse\",\r\n        element: <Browse/>\r\n    }\r\n ])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <RouterProvider router={appRouter} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,SAASC,cAAc,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAElB,MAAMC,SAAS,GAAGL,mBAAmB,CAAC,CACnC;IACIM,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACC,IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EACnB,CAAC,EACD;IACIL,IAAI,EAAE,SAAS;IACfC,OAAO,eAAEJ,OAAA,CAACJ,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EACrB,CAAC,CACH,CAAC;EAGD,oBACER,OAAA;IAAAS,QAAA,eACET,OAAA,CAACF,cAAc;MAACY,MAAM,EAAER;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAAAG,EAAA,GAnBKV,IAAI;AAqBV,eAAeA,IAAI;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}