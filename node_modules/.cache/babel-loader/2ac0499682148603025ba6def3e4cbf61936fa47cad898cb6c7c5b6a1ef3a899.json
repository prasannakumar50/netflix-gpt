{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\netflix-gpt\\\\src\\\\components\\\\VideoBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { API_OPTIONS } from '../constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTrailerVideo } from \"../utils/moviesSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoBackground = ({\n  movieId\n}) => {\n  _s();\n  const trailerVideo = useSelector(store => store.movies.trailerVideo);\n  const dispatch = useDispatch();\n\n  //const [trailerId, setTrailerId] = useState(null);\n\n  const getMovieVideos = async () => {\n    const data = await fetch('https://api.themoviedb.org/3/movie/823464/videos?language=en-US', API_OPTIONS);\n    const json = await data.json();\n    console.log(json);\n    const filterData = json.results.filter(video => video.type === \"Trailer\");\n    const trailer = filterData.length ? filterData[0] : json.results[0];\n    console.log(trailer);\n    dispatch(addTrailerVideo(trailer));\n    console.log(\"Trailer Video:\", trailer);\n  };\n  useEffect(() => {\n    getMovieVideos();\n  }, []);\n  console.log(\"Redux State:\", useSelector(store => store.movies));\n  console.log(\"Video URL:\", \"https://www.youtube.com/embed/\" + (trailerVideo === null || trailerVideo === void 0 ? void 0 : trailerVideo.key));\n  console.log(\"Trailer Video:\", trailerVideo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"560\",\n      height: \"315\",\n      src: \"https://www.youtube.com/embed/\" + (trailerVideo === null || trailerVideo === void 0 ? void 0 : trailerVideo.key),\n      title: \"YouTube video player\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoBackground, \"fl5ASvM0p2+ywJZwnuvFAy1ZBzc=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = VideoBackground;\nexport default VideoBackground;\nvar _c;\n$RefreshReg$(_c, \"VideoBackground\");","map":{"version":3,"names":["React","useEffect","API_OPTIONS","useDispatch","useSelector","addTrailerVideo","jsxDEV","_jsxDEV","VideoBackground","movieId","_s","trailerVideo","store","movies","dispatch","getMovieVideos","data","fetch","json","console","log","filterData","results","filter","video","type","trailer","length","key","children","width","height","src","title","allow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/GitHub/netflix-gpt/src/components/VideoBackground.js"],"sourcesContent":["import React, { useEffect, } from 'react'\r\nimport { API_OPTIONS } from '../constants';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {addTrailerVideo} from \"../utils/moviesSlice\"\r\n\r\nconst VideoBackground = ({movieId}) => {\r\n  const trailerVideo = useSelector(store => store.movies.trailerVideo);\r\n \r\n\r\n\r\n  \r\n  const dispatch =useDispatch();\r\n\r\n  //const [trailerId, setTrailerId] = useState(null);\r\n\r\n    const getMovieVideos = async()=>{\r\n\r\n     const data = await fetch('https://api.themoviedb.org/3/movie/823464/videos?language=en-US',API_OPTIONS)\r\n     const json = await data.json();\r\n     console.log(json)\r\n      \r\n     const filterData = json.results.filter(video => video.type === \"Trailer\")\r\n     const trailer = filterData.length ? filterData[0] : json.results[0]\r\n     console.log(trailer)\r\n     dispatch(addTrailerVideo(trailer));\r\n     console.log(\"Trailer Video:\", trailer);\r\n\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMovieVideos();\r\n    },[])\r\n     \r\n    console.log(\"Redux State:\", useSelector(store => store.movies));\r\n    console.log(\"Video URL:\", \"https://www.youtube.com/embed/\" + trailerVideo?.key);\r\n    console.log(\"Trailer Video:\", trailerVideo);\r\n\r\n  \r\n\r\n    \r\n  return (\r\n    <div>\r\n     <iframe width=\"560\" height=\"315\" src={\"https://www.youtube.com/embed/\"+trailerVideo?.key} title=\"YouTube video player\"  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"></iframe>\r\n    \r\n\r\n     \r\n\r\n\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default VideoBackground\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAS,OAAO;AACzC,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAQC,eAAe,QAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,eAAe,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,YAAY,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,MAAM,CAACF,YAAY,CAAC;EAKpE,MAAMG,QAAQ,GAAEX,WAAW,CAAC,CAAC;;EAE7B;;EAEE,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAS;IAE/B,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,iEAAiE,EAACf,WAAW,CAAC;IACvG,MAAMgB,IAAI,GAAG,MAAMF,IAAI,CAACE,IAAI,CAAC,CAAC;IAC9BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAEjB,MAAMG,UAAU,GAAGH,IAAI,CAACI,OAAO,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,SAAS,CAAC;IACzE,MAAMC,OAAO,GAAGL,UAAU,CAACM,MAAM,GAAGN,UAAU,CAAC,CAAC,CAAC,GAAGH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;IACnEH,OAAO,CAACC,GAAG,CAACM,OAAO,CAAC;IACpBZ,QAAQ,CAACT,eAAe,CAACqB,OAAO,CAAC,CAAC;IAClCP,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEM,OAAO,CAAC;EAGvC,CAAC;EAEDzB,SAAS,CAAC,MAAI;IACVc,cAAc,CAAC,CAAC;EACpB,CAAC,EAAC,EAAE,CAAC;EAELI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEhB,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,MAAM,CAAC,CAAC;EAC/DM,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,gCAAgC,IAAGT,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEiB,GAAG,EAAC;EAC/ET,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAET,YAAY,CAAC;EAK7C,oBACEJ,OAAA;IAAAsB,QAAA,eACCtB,OAAA;MAAQuB,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAACC,GAAG,EAAE,gCAAgC,IAACrB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEiB,GAAG,CAAC;MAACK,KAAK,EAAC,sBAAsB;MAAEC,KAAK,EAAC;IAAqG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMzO,CAAC;AAGV,CAAC;AAAA5B,EAAA,CA/CKF,eAAe;EAAA,QACEJ,WAAW,EAKhBD,WAAW,EAuBGC,WAAW;AAAA;AAAAmC,EAAA,GA7BrC/B,eAAe;AAiDrB,eAAeA,eAAe;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}