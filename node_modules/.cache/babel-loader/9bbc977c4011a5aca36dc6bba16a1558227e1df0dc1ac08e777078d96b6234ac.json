{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { addTrailerVideo } from \"../utils/moviesSlice\";\nimport { API_OPTIONS } from \"../constants\";\nimport { useEffect } from \"react\";\nconst useMovieTrailer = movieId => {\n  _s();\n  const dispatch = useDispatch();\n\n  //fetching the trailer video and updating the store with trailer video\n  const getMovieVideos = async () => {\n    const data = await fetch('https://api.themoviedb.org/3/movie/' + movieId + '/videos?language=en-US', API_OPTIONS);\n    const json = await data.json();\n    const filterData = json.results ? json.results.filter(video => video.type === \"Trailer\") : [];\n    const trailer = filterData.length ? filterData[0] : json.results[0];\n    dispatch(addTrailerVideo(trailer));\n  };\n  useEffect(() => {\n    getMovieVideos();\n  }, []);\n};\n_s(useMovieTrailer, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\nexport default useMovieTrailer;","map":{"version":3,"names":["useDispatch","addTrailerVideo","API_OPTIONS","useEffect","useMovieTrailer","movieId","_s","dispatch","getMovieVideos","data","fetch","json","filterData","results","filter","video","type","trailer","length"],"sources":["C:/Users/DELL/Documents/GitHub/netflix-gpt/src/hooks/useMovieTrailer.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { addTrailerVideo } from \"../utils/moviesSlice\";\r\nimport { API_OPTIONS } from \"../constants\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst useMovieTrailer = (movieId) =>{\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    //fetching the trailer video and updating the store with trailer video\r\n     const getMovieVideos = async () => {\r\n        const data = await fetch('https://api.themoviedb.org/3/movie/'+movieId+'/videos?language=en-US', API_OPTIONS)\r\n       \r\n      \r\n       const json = await data.json();\r\n       \r\n       const filterData = json.results ? json.results.filter(video => video.type === \"Trailer\") : [];\r\n\r\n       const trailer = filterData.length ? filterData[0] : json.results[0];\r\n       dispatch(addTrailerVideo(trailer));\r\n     }\r\n   \r\n     useEffect(() => {\r\n       getMovieVideos();\r\n     }, []);\r\n   \r\n\r\n}\r\n\r\nexport default useMovieTrailer;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,SAAS,QAAQ,OAAO;AAGjC,MAAMC,eAAe,GAAIC,OAAO,IAAI;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAG9B;EACC,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,qCAAqC,GAACL,OAAO,GAAC,wBAAwB,EAAEH,WAAW,CAAC;IAG9G,MAAMS,IAAI,GAAG,MAAMF,IAAI,CAACE,IAAI,CAAC,CAAC;IAE9B,MAAMC,UAAU,GAAGD,IAAI,CAACE,OAAO,GAAGF,IAAI,CAACE,OAAO,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,SAAS,CAAC,GAAG,EAAE;IAE7F,MAAMC,OAAO,GAAGL,UAAU,CAACM,MAAM,GAAGN,UAAU,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC;IACnEN,QAAQ,CAACN,eAAe,CAACgB,OAAO,CAAC,CAAC;EACpC,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdK,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;AAGX,CAAC;AAAAF,EAAA,CAtBKF,eAAe;EAAA,QACAJ,WAAW;AAAA;AAuBhC,eAAeI,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}