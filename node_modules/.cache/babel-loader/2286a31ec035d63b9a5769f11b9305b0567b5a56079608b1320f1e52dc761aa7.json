{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\netflix-gpt\\\\src\\\\components\\\\MovieList.js\";\nimport React from 'react';\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  title,\n  movies\n}) => {\n  console.log(movies);\n\n  // if (!movies) {\n  //     return <div>Loading...</div>; // Render a loading indicator if movies is null\n  //   }\n\n  //   // Check if movies is an empty array\n  //   if (movies.length === 0) {\n  //     return <div>No movies available</div>; // Render a message if movies is empty\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          posterPath: movie.poster_path\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","MovieCard","jsxDEV","_jsxDEV","MovieList","title","movies","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","posterPath","poster_path","id","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/GitHub/netflix-gpt/src/components/MovieList.js"],"sourcesContent":["\r\n\r\nimport React from 'react'\r\nimport MovieCard from './MovieCard'\r\n\r\nconst MovieList = ({title, movies}) => {\r\n    console.log(movies)\r\n\r\n    // if (!movies) {\r\n    //     return <div>Loading...</div>; // Render a loading indicator if movies is null\r\n    //   }\r\n    \r\n    //   // Check if movies is an empty array\r\n    //   if (movies.length === 0) {\r\n    //     return <div>No movies available</div>; // Render a message if movies is empty\r\n    //   }\r\n    \r\n  return (\r\n    <div>\r\n        <div>\r\n          <h1>{title}</h1>  \r\n            <div>\r\n                 \r\n                {movies.map(movie => <MovieCard  key ={movie.id}posterPath={movie.poster_path} />)}\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieList\r\n"],"mappings":";AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,SAAS,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAAM,CAAC,KAAK;EACnCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;;EAEnB;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEF,oBACEH,OAAA;IAAAM,QAAA,eACIN,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAAM,QAAA,EAAKJ;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACdV,OAAA;QAAAM,QAAA,EAEKH,MAAM,CAACQ,GAAG,CAACC,KAAK,iBAAIZ,OAAA,CAACF,SAAS;UAAiBe,UAAU,EAAED,KAAK,CAACE;QAAY,GAAvCF,KAAK,CAACG,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiC,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAM,EAAA,GAvBKf,SAAS;AAyBf,eAAeA,SAAS;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}