{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport store from './store';\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState: {\n    nowPlayingMovies: null,\n    addTrailerVideo: null\n  },\n  reducers: {\n    addNowPlayingMovies: (state, action) => {\n      state.nowPlayingMovies = action.payload;\n    },\n    addTrailerVideo: (state, action) => {\n      state.addTrailerVideo = action.payload;\n    }\n  }\n});\nexport const {\n  addNowPlayingMovies,\n  addTrailerVideo\n} = moviesSlice.actions;\nexport default moviesSlice.reducer;","map":{"version":3,"names":["createSlice","store","moviesSlice","name","initialState","nowPlayingMovies","addTrailerVideo","reducers","addNowPlayingMovies","state","action","payload","actions","reducer"],"sources":["C:/Users/DELL/Documents/GitHub/netflix-gpt/src/utils/moviesSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport store from './store'; \r\n\r\n\r\nconst moviesSlice =  createSlice({\r\n\r\n    name:\"movies\",\r\n    initialState : {\r\n        nowPlayingMovies:null,\r\n        addTrailerVideo:null\r\n        \r\n    },\r\n    reducers:{\r\n        addNowPlayingMovies : (state, action)=>{\r\n            state.nowPlayingMovies = action.payload;\r\n        },\r\n        addTrailerVideo : (state, action)=>{\r\n            state.addTrailerVideo = action.payload;\r\n        }\r\n    }\r\n\r\n});\r\n\r\nexport const {addNowPlayingMovies,addTrailerVideo}= moviesSlice.actions\r\n\r\nexport default moviesSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,SAAS;AAG3B,MAAMC,WAAW,GAAIF,WAAW,CAAC;EAE7BG,IAAI,EAAC,QAAQ;EACbC,YAAY,EAAG;IACXC,gBAAgB,EAAC,IAAI;IACrBC,eAAe,EAAC;EAEpB,CAAC;EACDC,QAAQ,EAAC;IACLC,mBAAmB,EAAGA,CAACC,KAAK,EAAEC,MAAM,KAAG;MACnCD,KAAK,CAACJ,gBAAgB,GAAGK,MAAM,CAACC,OAAO;IAC3C,CAAC;IACDL,eAAe,EAAGA,CAACG,KAAK,EAAEC,MAAM,KAAG;MAC/BD,KAAK,CAACH,eAAe,GAAGI,MAAM,CAACC,OAAO;IAC1C;EACJ;AAEJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACH,mBAAmB;EAACF;AAAe,CAAC,GAAEJ,WAAW,CAACU,OAAO;AAEvE,eAAeV,WAAW,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}